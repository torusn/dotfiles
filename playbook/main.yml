- hosts: localhost
  gather_facts: no
  vars:
    ansible_user: "{{ lookup('env', 'USER') }}"

  tasks:
    - name: Install Zsh with dependencies are installed
      apt:
        name: "{{ ['zsh'] + zsh_dependencies }}"
        state: present
        update_cache: yes
      become: true
      vars:
        zsh_dependencies: []
    - name: Ensure zsh is the default shell
      user:
        name: "{{ ansible_user }}"
        shell: "/usr/bin/zsh"
      become: true
    - name: "Install core utils"
      apt:
        name: "{{ packages }}"
        state: present
      become: true
      vars:
        packages:
          - git
          - tmux
          - python3-pip
          - fzf
          - ripgrep
          #    - gdb
          #    - docker
          #    - docker-compose
        state: latest
        update_cache: true
    - name: Download Oh My Zsh installation script
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
        dest: "/tmp/install_ohmyzsh.sh"
    - name: Run Oh My Zsh installation script
      command: sh /tmp/install_ohmyzsh.sh --unattended
      register: ohmyzsh_result
      failed_when: "'FAILED' in ohmyzsh_result.stderr"
    - name: "Ensure ~/.local"
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') + '/.local' }}"
        state: directory
        mode: '0755'
    - name: "Ensure ~/.config"
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') + '/.config' }}"
        state: directory
        mode: '0755'
    - name: "Setup symlinks for ~/.local/bin"
      ansible.builtin.file:
        src: "{{ lookup('env','HOME') + '/dotfiles/bin' }}"
        dest: "{{ lookup('env','HOME') + '/.local/bin' }}"
        owner: "{{ ansible_user }}"
        state: link
    - name: "Find all system files to symlink"
      find:
        paths: "{{ lookup('env', 'HOME') + '/dotfiles/system' }}"
      register: find
    - name: "Setup symlinks for ~ files"
      ansible.builtin.file:
        src: "{{ item.path }}"
        dest: "{{ lookup('env','HOME') + '/' + item.path | basename }}"
        owner: "{{ ansible_user }}"
        state: link
      with_items: "{{ find.files }}"
    - name: "Get nvim"
      ansible.builtin.get_url:
        url: "https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz"
        dest: "/tmp/nvim.tar.gz"
        mode: '0555'
    - name: "Install nvim"
      ansible.builtin.shell:
        cmd: |
          rm -rf /opt/nvim
          tar -C /opt -xzf /tmp/nvim.tar.gz
      become: true
    - name: "Link nvim config"
      ansible.builtin.file:
        src: "{{ lookup('env','HOME') + '/dotfiles/nvim_minimal' }}"
        dest: "{{ lookup('env','HOME') + '/.local/nvim' }}"
        owner: "{{ ansible_user }}"
        state: link
    - name: "Get golang"
      ansible.builtin.get_url:
        url: "https://go.dev/dl/go1.22.0.linux-amd64.tar.gz"
        dest: "/tmp/go1.22.0.tar.gz"
        mode: '0555'
    - name: "Install golang"
      ansible.builtin.shell:
        cmd: |
          rm -rf /usr/local/go
          tar -C /usr/local -xzf /tmp/go1.22.0.tar.gz
      become: true
    #- name: "Link gdb config"
    #  ansible.builtin.file:
    #    src: "{{ lookup('file', lookup('env','HOME') + '/dotfiles/.gdbinit') }}"
    #    dest: "{{ lookup('file', lookup('env','HOME') + '/.gdbinit') }}"
    #    owner: "{{ ansible_user }}"
    #    state: link
